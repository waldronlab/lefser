name: build
on:
  push:
    branches:
      - RELEASE_3_18

env:
  cache-version: v1

jobs:
  build:
    runs-on: ubuntu-22.04
    container: bioconductor/bioconductor_docker:RELEASE_3_18

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REMOTES_STANDALONE: TRUE
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/R/site-library
          key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-

      - name: Install Package Dependencies
        run: |
          remotes::install_local(dependencies = TRUE, repos = BiocManager::repositories(), build_vignettes = TRUE, upgrade = TRUE)
          BiocManager::install(c("rcmdcheck", "pkgdown"), ask = FALSE, update = TRUE)
        shell: Rscript {0}

      - name: Check Package
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: generate codecov report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          Rscript -e "suppressMessages(x <- covr::codecov())"

      - name: Build pkgdown
        run: |
           PATH=$PATH:$HOME/bin/ Rscript -e 'pkgdown::build_site(".")'

      # deploy needs rsync? Seems so.
      - name: Install deploy dependencies
        run: |
          apt-get update
          apt-get -y install rsync git

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs # The folder the action should deploy.
